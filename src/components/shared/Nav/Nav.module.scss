@use 'styles/variables/colors';
@use 'styles/variables/dims';
@use 'styles/mixins/media';
@use 'styles/variables/elevation';

$transition-duration: 500ms;
$background: colors.$primary;
:export {
  transitionDuration: $transition-duration;
}

/* === Design === */
.Nav {
  background: $background;

  .Item {
    text-align: left;
    background: $background;
    color: inherit;
    border: none;
    text-decoration: none;
    position: relative;
    overflow: hidden;
  }
  .ItemButton,
  .ItmeTitle {
    transition: background 150ms;
    text-decoration: none;
    color: inherit;

    &:focus {
      outline: none;
    }
  }
  &:not(.NavAnimating):not(.NavAnimatingPrepare) {
    .ItemButton:hover,
    .ItemTitle:hover,
    .ItemActive {
      background: darken($background, 2%);
    }
    .ItemButton:active,
    .ItemButton:focus,
    .ItemTitle:active,
    .ItemTitle:focus {
      background: darken($background, 5%);
    }
  }

  .ItemTitle {
    box-shadow: 0 7px 7px -3px colors.$shadow;
  }
}

/* === Layout === */
.Nav {
  // position: fixed dims.$sidebar-size 0 0;
  position: fixed 0 0 dims.$sidebar-size;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  transition: transform 400ms cubic-bezier(0.27, 0, 0.19, 1); /* Open/close */
  transform: translate(-105%);
  overflow-x: hidden;
  z-index: elevation.$nav;

  @include media.md {
    right: auto;
    top: dims.$sidebar-size;
    bottom: 0;
    width: 50%;
    min-width: 25rem;
    max-width: 30rem;
  }

  &.NavOpen {
    transform: translate(0);
    box-shadow: 1px 0 7px colors.$shadow;
  }

  .Item {
    width: 100%;
    height: 4rem;
    font-size: 1.2rem;
    position: relative;
    transform: translateY(0);
  }
  .ItemButton {
    size: 100%;
    // Just `flex` incorrectly displays in edge
    display: inline-flex;
    text-align: left;
    align-items: center;
    padding-left: 3rem;
  }
  .ItemTitle {
    flex-shrink: 0;
    font-size: 1.5rem;
    position: relative;
    z-index: 2;

    .ItemButton {
      padding-left: 4rem;
    }
  }
  .BackButton {
    height: 100%;
    padding: 1.2rem;
    position: absolute 0 * * 0;
  }

  .ListContainer {
    overflow: hidden;
    position: relative;
    flex: 1;

    // &:before {
    //   content: '';
    //   position: absolute 0 0 *;
    //   box-shadow: 0 0 15px 10px $background;
    //   z-index: 1;
    // }
  }
  .ListScroller {
    flex: 1;
    height: 100%;
    overflow-y: scroll;
  }

  /* === Animation === */
  .ListNew {
    position: absolute 0;
  }
  .ItemPlaceholder {
    position: absolute;
    z-index: 2;
  }

  .Buttons {
    display: flex;
    background: $background;
  }
  .Button {
    padding: 0.8rem;
    size: dims.$sidebar-size;
  }
  .Icon {
    color: colors.$action;
    transition: color 150ms;

    &:hover {
      color: colors.$hover;
    }
    &:focus,
    &:active {
      outline: none;
      color: colors.$focus;
    }
  }

  &.NavAnimatingPrepare .ItemNewTitle:before,
  &.NavAnimating .ItemNewTitle:before {
    content: '';
    position: absolute 0;
    background: inherit;
  }
  &.NavAnimatingOut {
    &.NavAnimatingPrepare {
      .ItemTitle:not(.ItemPlaceholder) {
        transform: translateY(-100vh);
      }
      .ListNew {
        .Item {
          transform: translateY(-100vh);
        }
        .ItemNewTitle {
          /* visibility: hidden; */

          & ~ .Item {
            transform: translateY(100vh) !important;
          }
        }
        .ItemPlaceholder {
          top: 0 !important;
        }
      }
    }
    &.NavAnimating {
      .ListOld {
        transform: translateY(100vh);
        transition: transform $transition-duration;
      }
      .ItemTitle:not(.ItemPlaceholder) {
        transition: transform $transition-duration;
        transform: translateY(0);
        z-index: 3;
      }
      .ItemPlaceholder {
        transition: $transition-duration;
        font-size: 1.2rem;
        box-shadow: none;

        .BackButton {
          transition: $transition-duration;
          opacity: 0;
          transform: translate(-50%);
        }
        .ItemButton {
          transition: padding-left $transition-duration;
          padding-left: 3rem;
        }
      }
      .ListNew .Item {
        transition: transform $transition-duration;
        transform: translateY(0) !important;
      }
    }
  }
  &.NavAnimatingIn {
    &.NavAnimatingPrepare {
      .ItemPlaceholder {
        font-size: 1.2rem;
        box-shadow: none;

        .BackButton {
          opacity: 0;
          transform: translate(-50%);
        }
        .ItemButton {
          padding-left: 3rem;
        }
      }
      .ListNew {
        transform: translateY(100vh);
      }
    }
    &.NavAnimating {
      .ListNew {
        transition: transform $transition-duration;
        transform: translateY(0);
      }
      .ItemTitle:not(.ItemPlaceholder) {
        transition: transform $transition-duration;
        transform: translateY(-100vh);
      }
      .ItemPlaceholder {
        transition: $transition-duration;
        top: 0 !important;
        font-size: 1.5rem;

        .BackButton {
          transition: $transition-duration;
          opacity: 1;
          transform: translate(0);
        }
        .ItemButton {
          transition: padding-left $transition-duration;
          padding-left: 4rem;
        }
      }
      .ListOld {
        .Item {
          transition: transform $transition-duration;
          transform: translateY(-100vh);
        }
        .ItemNewTitle ~ .Item {
          transform: translateY(100vh);
        }
      }
    }
  }
}
