@use 'styles/variables/colors';
@use 'styles/mixins/transition';
@use 'styles/mixins/transition-opacity';

$transition-duration: 300ms;
$transition-class-name: two-latest-display;

:export {
  transitionDuration: $transition-duration;
  transitionClassName: $transition-class-name;
}

.Container {
  size: 100%;
  position: relative;
}

@keyframes item-appear {
  from {
    transform: scale(0.85);
    opacity: 0;
  }
  25% {
    transform: scale(0.85);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}
.Transition {
  width: 100%;
  animation: item-appear $transition-duration ease-out;
  transition: $transition-duration * 0.75 ease-out;
  transform-origin: 50% 100%;

  // @include transition.self($transition-class-name, (from)) {
  //   transform: scale(0.85);
  //   opacity: 0;
  // }
  // @include transition.self($transition-class-name, (active)) {
  //   transform: scale(1);
  //   opacity: 1;
  //   transition: $transition-duration * 0.75 $transition-duration * 0.25 ease-out;
  // }

  // &:not(.TransitionPrevious) {
  //   @include transition.self($transition-class-name, (exit)) {
  //     opacity: 0;
  //   }
  // }
}
.TransitionPrev1 {
  transform: translateY(-125%) scale(0.65);
  opacity: 0.7;
  position: absolute * 0;

  // @include transition.self($transition-class-name, (exit-to)) {
  // }
}
.TransitionPrev2 {
  transform: translateY(-125%) scale(0.5) translateY(-50%);
  opacity: 0;
  position: absolute * 0;
}
.TransitionHiding {
  opacity: 0;
  transform: translateY(5rem) scale(0.6);
}
